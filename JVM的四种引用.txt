Jdk1.2以后将引用进行了扩充

从强到弱依次是

强引用  > 软引用  > 弱引用 > 虚引用



#### 强引用

 就是指在代码之中普遍存在的,类似Object obj =new Object ();

这类引用，只要强引用还存在，那么垃圾回收器永远不会回收掉被引用的对象

#### 软引用

使用来描述一些还有用但是非必须的对象，对于软引用关联着的对象，在系统将要发生内存溢出异常之前，将会把这些对象列进行回收范围之内进行第二次回收，如果这次回收还没有足够的内存，才会抛出内存溢出异常。

SoftReference类 来实现软引用

#### 弱引用

也是用来描述非必须对象，但是他墙读会比软引用更弱一点，被弱引用关联的对象只能生存到下一次垃圾回收之前。当垃圾回收之前，无论当前内存是否足够，都会回收掉只被弱引用的对象。

WeakReference类来实现弱引用

#### 虚引用

最弱的一种引用关系。一个对象是否有虚引用的存在，完全不会对其生存时间构成影响，也无法通过虚引用来获取一个对象实例。为一个对象设置虚引用关联的唯一目的就是能够在这个对象被垃圾回收收集器回收的时候收到一个通知。

PhantomReference类来实现虚引用。

#### 4种引用的不同应用场景

强引用：

- 我们创建对象的时候使用，当存在强引用的方法块使用完或者手动将强引用设置为null，强引用才会被回收掉

软引用

- 根据他当内存足够使用就不会被回收的特点，我们可以把它当做一个缓存来使用，可以实现内存敏感的高速缓存，比如网页缓存，图片缓存等。使用软引用能够防止内存泄漏。

弱引用

- 他会一直存活到自从他被创建后的第一次GC回收

虚引用

- 它主要是可以用来当做判断实例是否被GC回收掉的一种记录

